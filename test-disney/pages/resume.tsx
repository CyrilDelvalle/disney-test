import { ErrorMessage, Field, Form, Formik } from 'formik';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { number, object, string } from 'yup';
import { setStep } from "../store/stepSlice";
import countries from '../api/countries.json'


const Resume: NextPage = () => {
    const dispatch = useDispatch();

    const validationSchema = object({
      firstName: string().max(50).required('Veuillez entrer un prénom').matches(/^[aA-zZ\s]+$/, "Seul les lettres sont autorisées"),
      lastName: string().max(50).required('Veuillez entrer un nom de famille').matches(/^[aA-zZ\s]+$/, "Seul les lettres sont autorisées"),
      mail: string().email("Entrez une adresse mail valide").required('Veuillez entrer une adresse mail'),
      street: string().max(100).required('Veuillez entrez une rue'),
      country: number().min( 1, "Veuillez sélectionnez un pays").required(),
      city: string().max(50).required('Veuillez entrer une ville').matches(/^[aA-zZ\s]+$/, "Seul les lettres sont autorisées"),
      zipCode: string()
      .required("Veuillez entrez un code postal")
      .matches(/^[0-9]+$/, "Veuillez entrez un code postal valide")
      .min(5, "Veuillez entrez un code postal valide")
      .max(5, "Veuillez entrez un code postal valide"),
    });

    const initialValues = {
      firstName: "",
      lastName: "",
      mail: "",
      country: 0,
      street: "",
      zipCode: "",
      city: "",
  };

    useEffect(() => {
        dispatch(setStep(3))
      }, [])


      const handleSubmit = (values: any) => {
        console.log(values)
    };

  return (
    <div>
      <Head>
        <title>Test hotel Disney</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/mickeyLogo.png" />
      </Head>
     
      <div className="mt-12 sm:mt-0 bg-red-500 flex justify-center ">
         <div className="m-16">
          <div className="shadow overflow-hidden sm:rounded-md">
            <div className="px-4 py-5 bg-white sm:p-6">
              <div className="md:mt-0 md:max-w-2xl col-span-6 sm:col-span-3">
                  <Formik
                    initialValues={initialValues}
                    validationSchema={validationSchema}
                    onSubmit={(values) =>handleSubmit(values)}>
                   {({ resetForm }) => (
                      <Form>
                <div className=" bg-white">
                      <div className="mt-5 md:mt-0 md:col-span-2">
                          <div className="px-4 py-5 bg-white sm:p-6">
                            <div className="grid grid-cols-6 gap-6">
                              <div className="col-span-6 sm:col-span-3">
                                <label htmlFor="first-name" className="block text-sm font-medium text-gray-700">
                                  Prénom
                                </label>
                                  <Field
                                    type="text"
                                    id="firstName"
                                    name="firstName"
                                    className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                  />
                                  <ErrorMessage
                                      name="firstName"
                                      component="small"
                                      className="text-red-400"
                                  />                         
                              </div>
                              <div className="col-span-6 sm:col-span-3">
                                <label htmlFor="last-name" className="block text-sm font-medium text-gray-700">
                                  Nom de famille
                                </label>
                                  <Field
                                    type="text"
                                    id="lastName"
                                    name="lastName"
                                    className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                  />
                                  <ErrorMessage
                                    name="lastName"
                                    component="small"
                                    className="text-red-400"
                                  />
                              </div>
                              <div className="col-span-6 sm:col-span-4">
                                  <label htmlFor="email-address" className="block text-sm font-medium text-gray-700">
                                    Adresse mail
                                  </label>
                                    <Field
                                        type="text"
                                        id="mail"
                                        name="mail"
                                        className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                    />
                                    <ErrorMessage
                                        name="mail"
                                        component="small"
                                        className="text-red-400"
                                    />
                              </div>
                              <div className="col-span-6 sm:col-span-3">
                                <label htmlFor="country" className="block text-sm font-medium text-gray-700">
                                  Pays
                                </label>
                                <Field as="select" name="country">
                                <option value="0">Sélectionnez un pays</option>
                                {
                                    countries.map(({ id, name}) => {
                                      return <option value={id}>{name}</option>;
                                    })
                                  }
                                </Field>
                                  <ErrorMessage
                                      name="country"
                                      component="small"
                                      className="text-red-400"
                                  />
                              </div>
                              <div className="col-span-6">
                                <label htmlFor="street-address" className="block text-sm font-medium text-gray-700">
                                  Rue
                                </label>
                                    <Field
                                      type="text"
                                      id="street"
                                      name="street"
                                      className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                    />
                                    <ErrorMessage
                                        name="street"
                                        component="small"
                                        className="text-red-400"
                                    />
                              </div>

                              <div className="col-span-6 sm:col-span-6 lg:col-span-2">
                                <label htmlFor="city" className="block text-sm font-medium text-gray-700">
                                  Ville
                                </label>
                                  <Field
                                      type="text"
                                      id="city"
                                      name="city"
                                      className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                  />
                                  <ErrorMessage
                                      name="city"
                                      component="small"
                                      className="text-red-400"
                                  />
                              </div>
                              <div className="col-span-6 sm:col-span-3 lg:col-span-2">
                                <label htmlFor="postal-code" className="block text-sm font-medium text-gray-700">
                                  Code postal
                                </label>
                                  <Field
                                    type="text"
                                    id="zipCode"
                                    name="zipCode"
                                    className="form-control  mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                />
                                <ErrorMessage
                                    name="zipCode"
                                    component="small"
                                    className="text-red-400"
                                />
                              </div>
                            </div>
                          </div>    
                    </div>

                </div>
                <div className="px-4 py-3 text-right sm:px-6">
                  <button
                    type="submit"
                    className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                    Sauvegarder
                  </button>
                </div>
                      </Form>
                      )}
                  </Formik>
          </div>


              </div>
              </div>
              </div>
              </div>
    </div>
  )
}

export default Resume
